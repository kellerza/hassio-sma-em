[build-system]
build-backend = "setuptools.build_meta"
requires = [ "setuptools", "setuptools-scm" ]

[project]
name = "sma"
version = "0.0.2"
description = "SMA-EM"
readme = "README.md"
keywords = [ "energy", "power", "sma" ]
license = { text = "Apache-2.0" }
authors = [ { name = "Johann Kellerman", email = "kellerza@gmail.com" } ]
requires-python = ">=3.12"
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = [
  "attrs>=25,<26",
  "icecream",
  "mqtt-entity[options]>=1,<2",
]

urls.Homepage = "https://kellerza.github.io/sma-em/"

[dependency-groups]
dev = [
  "codespell>=2.4.1",
  "mypy",
  "pyproject-fmt>=2.6",
  "pytest",
  "pytest-asyncio",
  "pytest-cov",
  "pytest-github-actions-annotate-failures",
]

[tool.setuptools]
license-files = [  ] # https://github.com/astral-sh/uv/issues/9513

[tool.ruff]
target-version = "py312"
include = [ "src/**/*.py" ]
exclude = [ "sma-em-legacy/*", "src/ha_addon_sma/speedwiredecoder.py" ]

format.indent-style = "space"
format.quote-style = "double"
format.line-ending = "lf"
format.skip-magic-trailing-comma = false
format.docstring-code-line-length = "dynamic"
format.docstring-code-format = true
lint.select = [
  "A",     # flake8-builtins
  "ASYNC", # flake8-async
  "B",     # bugbear
  "D",     # pydocstyle
  "E",     # pycodestyle
  "F",     # pyflakes
  "I",     # isort
  "PGH",   # pygrep-hooks
  "PIE",   # flake8-pie
  "PL",    # pylint
  "PTH",   # flake8-pathlib
  "PYI",   # flake8-pyi
  "RUF",   # ruff
  "UP",    # pyupgrade
  "W",     # pycodestyle
]
lint.ignore = [ "D203", "D213", "E203", "E501", "PLR2004" ]
lint.pylint.max-args = 7

[tool.codespell]
skip = "data,*.map,package-lock.json,*.map"
ignore-words-list = "HASS,hass,Hass,ist"

[tool.pytest.ini_options]
pythonpath = [ ".", "src" ]
filterwarnings = "ignore:.+@coroutine.+deprecated.+"
testpaths = "src\tests"
norecursedirs = [ ".git", "modules" ]
log_cli = true
log_cli_level = "DEBUG"
asyncio_mode = "auto"
addopts = "--cov=src --cov-report xml:cov.xml"

[tool.mypy]
disallow_untyped_defs = true
ignore_missing_imports = true
exclude = [ "build/.*", "sma-em-legacy/.*" ]
enable_error_code = [ "ignore-without-code" ]
